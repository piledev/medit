[{"/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/index.tsx":"1","/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/reportWebVitals.ts":"2","/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/StackHeatmap.tsx":"3","/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/Profile.tsx":"4","/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/AppBar.tsx":"5","/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/Recorder.tsx":"6","/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/Timer.tsx":"7"},{"size":694,"mtime":1610410909720,"results":"8","hashOfConfig":"9"},{"size":459,"mtime":1609022812124,"results":"10","hashOfConfig":"9"},{"size":1482,"mtime":1607560037823,"results":"11","hashOfConfig":"9"},{"size":454,"mtime":1610364883123,"results":"12","hashOfConfig":"9"},{"size":5647,"mtime":1607726713334,"results":"13","hashOfConfig":"9"},{"size":4333,"mtime":1609640759679,"results":"14","hashOfConfig":"9"},{"size":3420,"mtime":1610412264603,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"zaomb6",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/index.tsx",["34","35"],"/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/reportWebVitals.ts",["36"],"import { report } from 'process';\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",["37","38"],"/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/StackHeatmap.tsx",[],["39","40"],"/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/Profile.tsx",[],"/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/AppBar.tsx",[],"/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/Recorder.tsx",["41"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Slider,\n  Input,\n  Button,\n  Switch,\n} from \"@material-ui/core\";\n/* import CheckIcon from \"@material-ui/icons/Check\"; */\nimport \"./Recorder.css\";\n\nfunction valuetext(value: number) {\n  return `${value} minute`;\n}\n\nexport default function Recorder() {\n  return (\n    <div className=\"recorder\">\n      <Typography id=\"Settings-label\" variant=\"h3\" component=\"h3\" gutterBottom>\n        Settings\n      </Typography>\n      <Typography\n        id=\"meditation-label\"\n        variant=\"h5\"\n        component=\"h5\"\n        gutterBottom\n      >\n        Meditation time\n      </Typography>\n      <InputSlider label=\"hour\" step={1} max={23} default={0} />\n      <InputSlider label=\"min.\" step={1} max={59} default={15} />\n      <Typography\n        id=\"preparation-label\"\n        variant=\"h5\"\n        component=\"h5\"\n        gutterBottom\n      >\n        Preparation time\n      </Typography>\n      <InputSlider label=\"sec.\" step={1} max={59} default={5} />\n      <Typography\n        id=\"preparation-label\"\n        variant=\"h5\"\n        component=\"h5\"\n        gutterBottom\n      >\n        Notification\n      </Typography>\n      <AlarmSwitch />\n      <h1> </h1>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <SettingRecordButton />\n        </Grid>\n        <Grid item>\n          <ChangeModeButton />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nfunction SettingRecordButton() {\n  const [state, setState] = useState(false);\n\n  return (\n    <Button variant=\"contained\" onClick={() => setState((m) => !m)}>\n      Save to presets\n    </Button>\n  );\n}\n\nfunction ChangeModeButton() {\n  const [mode, setMode] = useState(false);\n\n  return (\n    <Button variant=\"contained\" onClick={() => setMode((m) => !m)}>\n      {mode ? \"Settings\" : \"Meditate\"}\n    </Button>\n  );\n}\n\n// function InputSlider(minvalue: number = 0, maxvalue: number = 59, stepValue: number = 1) {\nconst InputSlider = (props: any) => {\n  const [value, setValue] = React.useState(props.default);\n\n  const handleSliderChange = (event: any, newValue: any) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event: any) => {\n    setValue(event.target.value === \"\" ? 0 : Number(event.target.value));\n  };\n\n  const handleBlur: any = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > props.max) {\n      setValue(props.max);\n    }\n  };\n\n  return (\n    <div className=\"slider\">\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={1}>\n          <Typography\n            id=\"inputsliderlabel\"\n            variant=\"h6\"\n            gutterBottom\n            align=\"right\"\n          >\n            {props.label}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Input\n            className=\"input\"\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: props.step,\n              min: 0,\n              max: props.max,\n              type: \"number\",\n              \"aria-labelledby\": \"input-slider\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <Slider\n            value={typeof value === \"number\" ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            defaultValue={props.default}\n            getAriaValueText={valuetext}\n            valueLabelDisplay=\"auto\"\n            step={props.step}\n            min={0}\n            max={props.max}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nfunction AlarmSwitch() {\n  const [isAlarmOn, setIsAlarmOn] = React.useState(false);\n\n  const handleChange = (event: any) => {\n    setIsAlarmOn((i) => !i);\n  };\n\n  return (\n    <div className=\"switch\">\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <Typography\n            id=\"inputsliderlabel\"\n            variant=\"h6\"\n            gutterBottom\n            align=\"right\"\n          >\n            sound\n          </Typography>\n        </Grid>\n        <Switch\n          checked={isAlarmOn}\n          onChange={handleChange}\n          color=\"primary\"\n          name=\"checked\"\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        />\n      </Grid>\n    </div>\n  );\n}\n","/Users/jumpei/go/1.15.2/src/github.com/yokoyamada/medit/frontend/src/Timer.tsx",["42","43","44","45"],{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":15},{"ruleId":"46","severity":1,"message":"50","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":16},{"ruleId":"46","severity":1,"message":"51","line":1,"column":10,"nodeType":"48","messageId":"49","endLine":1,"endColumn":16},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"46","severity":1,"message":"58","line":65,"column":10,"nodeType":"48","messageId":"49","endLine":65,"endColumn":15},{"ruleId":"46","severity":1,"message":"59","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":14},{"ruleId":"46","severity":1,"message":"60","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":17},{"ruleId":"46","severity":1,"message":"61","line":30,"column":21,"nodeType":"48","messageId":"49","endLine":30,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":43,"column":6,"nodeType":"64","endLine":43,"endColumn":16,"suggestions":"65"},"@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Recorder' is defined but never used.","'report' is defined but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"'state' is assigned a value but never used.","'Grid' is defined but never used.","'display' is defined but never used.","'setIsStopped' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isStopped'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [isStopped, timeLeft]",{"range":"71","text":"72"},[1219,1229],"[isStopped, timeLeft]"]